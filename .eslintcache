[{"D:\\websiteproject\\gca-todoapp\\src\\index.js":"1","D:\\websiteproject\\gca-todoapp\\src\\App.js":"2","D:\\websiteproject\\gca-todoapp\\src\\reportWebVitals.js":"3","D:\\websiteproject\\gca-todoapp\\src\\firebase.js":"4","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\SignIn.js":"5","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\Todoapp.js":"6","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\TodoCard.js":"7"},{"size":499,"mtime":1609229278912,"results":"8","hashOfConfig":"9"},{"size":420,"mtime":1609229502703,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":579,"mtime":1609229253368,"results":"12","hashOfConfig":"9"},{"size":4431,"mtime":1609230363899,"results":"13","hashOfConfig":"9"},{"size":2896,"mtime":1609259403756,"results":"14","hashOfConfig":"9"},{"size":3380,"mtime":1609260396797,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8sp43",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\websiteproject\\gca-todoapp\\src\\index.js",[],"D:\\websiteproject\\gca-todoapp\\src\\App.js",["32"],"D:\\websiteproject\\gca-todoapp\\src\\reportWebVitals.js",[],["33","34"],"D:\\websiteproject\\gca-todoapp\\src\\firebase.js",[],"D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\SignIn.js",["35","36","37"],"D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\Todoapp.js",["38","39","40"],"import React ,{ useState ,useEffect}from 'react'\r\nimport { Button, IconButton ,TextField} from \"@material-ui/core\";\r\nimport './Todoapp.css'\r\nimport TodoCard from './TodoCard';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport {db} from '../firebase'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nfunction Todoapp() {\r\n    const [inputs, setInputs] = useState('');\r\n    const[date,setDate]=useState('')\r\n    const [todos, setTodos] = useState([])\r\n    const [error,setError] =useState(\"\")\r\n    \r\n    const handleChange = (event) => {\r\n          setInputs(event.target.value)\r\n    }\r\n\r\n   const addTodos = (e) => {\r\n    e.preventDefault();\r\n       if(inputs !== ' ' && date !== ''){\r\n\r\n        db.collection(\"todos\").add({\r\n            todo:inputs,\r\n            Date:date,\r\n            timestamp:new Date()\r\n       })\r\n       setError(\"\")\r\n       setInputs(\"\");\r\n       setDate(\"\");\r\n       \r\n    }\r\n    else{\r\n       setError(\"feilds should not be empty\")\r\n    }\r\n    \r\n   }\r\n\r\n\r\n \r\n   useEffect(() => {\r\n    db.collection('todos').onSnapshot(snapshot =>{\r\n        setTodos(snapshot.docs.map(doc => ({id:doc.id,todo:doc.data()})))\r\n       console.log(todos,\"snapshot\")\r\n    })\r\n   },[true])\r\n\r\n  if (todos.length === 0){\r\n      <h1>loading....</h1>\r\n  }\r\n    return (\r\n        <div className=\"todo__app\">\r\n        <IconButton style={{float:'right'}} >logout<ExitToAppIcon/></IconButton>\r\n            <div>\r\n              <h1>Todo App</h1>\r\n              {error && <Alert severity=\"error\">{error}</Alert>}\r\n              <form style={{width:\"70%\",margin:'auto'}}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Add todoLists\"\r\n              name=\"Inputs\"\r\n              value={inputs}\r\n              onChange={(e)=>{setInputs(e.target.value)}}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"date\"\r\n              label=\"Select your day\"\r\n              type=\"date\"\r\n              value={date}\r\n              onChange={(e)=>{setDate(e.target.value)}}\r\n            />\r\n   \r\n            <Button variant=\"contained\" fullWidth color=\"primary\"  onClick={addTodos}>Add Todo</Button>\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"todos\">   \r\n                \r\n            </div> \r\n            \r\n            <div>\r\n            {\r\n                todos.map((todo,id) => \r\n                \r\n                 <TodoCard \r\n                 todo={todo}  \r\n                 key={id}\r\n                 \r\n                 />\r\n                 \r\n                  \r\n                )\r\n                \r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todoapp\r\n","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\TodoCard.js",["41","42","43","44"],{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"45","severity":1,"message":"53","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":24},{"ruleId":"45","severity":1,"message":"54","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":16},{"ruleId":"45","severity":1,"message":"55","line":57,"column":17,"nodeType":"47","messageId":"48","endLine":57,"endColumn":27},{"ruleId":"45","severity":1,"message":"56","line":15,"column":11,"nodeType":"47","messageId":"48","endLine":15,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":46,"column":6,"nodeType":"59","endLine":46,"endColumn":12,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":46,"column":7,"nodeType":"62","endLine":46,"endColumn":11},{"ruleId":"45","severity":1,"message":"63","line":11,"column":20,"nodeType":"47","messageId":"48","endLine":11,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":29,"column":21,"nodeType":"66","messageId":"67","endLine":29,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":29,"column":41,"nodeType":"66","messageId":"67","endLine":29,"endColumn":43},{"ruleId":"68","severity":1,"message":"69","line":63,"column":5,"nodeType":"70","messageId":"71","endLine":63,"endColumn":42},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'setLoading' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todos'. Either include it or remove the dependency array.","ArrayExpression",["74"],"The true literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'setChecked' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [todos]",{"range":"77","text":"78"},[1201,1207],"[todos]"]