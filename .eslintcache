[{"D:\\websiteproject\\gca-todoapp\\src\\index.js":"1","D:\\websiteproject\\gca-todoapp\\src\\App.js":"2","D:\\websiteproject\\gca-todoapp\\src\\reportWebVitals.js":"3","D:\\websiteproject\\gca-todoapp\\src\\firebase.js":"4","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\SignIn.js":"5","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\Todoapp.js":"6","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\TodoCard.js":"7"},{"size":499,"mtime":1609229278912,"results":"8","hashOfConfig":"9"},{"size":1529,"mtime":1609295187410,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":579,"mtime":1609229253368,"results":"12","hashOfConfig":"9"},{"size":4517,"mtime":1609295015197,"results":"13","hashOfConfig":"9"},{"size":3172,"mtime":1609304229838,"results":"14","hashOfConfig":"9"},{"size":3152,"mtime":1609303965647,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8sp43",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"D:\\websiteproject\\gca-todoapp\\src\\index.js",[],["34","35"],"D:\\websiteproject\\gca-todoapp\\src\\App.js",["36","37"],"import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport SignIn from './TodoApp/SignIn';\nimport Todoapp from './TodoApp/Todoapp';\nimport { BrowserRouter as Router ,Switch, Route ,Redirect} from \"react-router-dom\"\nimport {auth} from './firebase'\n\n\n\n\nfunction App() {\n  const[isLoggedIn,setIsLoggedIn] =React.useState(false)\n  const [user,setUser]=React.useState('')\n\n  React.useEffect(()=>{\n    auth.onAuthStateChanged(auth =>{\n     if(auth){\n       setIsLoggedIn(true)\n       setUser(auth)\n         \n     }else{\n       setIsLoggedIn(false)\n       setUser(null)\n     }\n    })\n  })\n\n  function logOut (){\n    if(user){\n      auth.signOut()\n    }\n    \n  }\n  \n  return (\n<Router>\n    <Switch>\n    <Route \n      exact \n          path=\"/\"  \n              render ={\n                  ()=> \n                    isLoggedIn  ? \n                      <Redirect to =\"/todo\" /> : \n                        <SignIn \n                        setIsLoggedIn={setIsLoggedIn}\n                        \n                            />}/> \n\n    <Route\n        exact\n           path=\"/todo\"\n                render={\n                    () =>\n                        isLoggedIn  ?\n                              <Todoapp setIsLoggedIn={setIsLoggedIn}\n                              user={user}\n                                    /> :\n                                       <Redirect to=\"/\" />\n                                      }\n                                    />\n\n    </Switch>\n</Router>\n    \n  );\n}\n\nexport default App;\n","D:\\websiteproject\\gca-todoapp\\src\\reportWebVitals.js",[],"D:\\websiteproject\\gca-todoapp\\src\\firebase.js",[],"D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\SignIn.js",["38","39","40"],"import React ,{ useState }from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { auth } from '../firebase';\r\nimport { useHistory } from 'react-router-dom'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 4),\r\n  },\r\n}));\r\n\r\nexport default function SignIn({setIsLoggedIn}) {\r\n  const classes = useStyles();\r\n  const[email,setEmail] = useState()\r\n  const[password,setPassword] =useState()\r\n  const[error,setError] =useState('')\r\n  const[loading,setLoading]=useState(false)\r\n  const history =useHistory()\r\n   \r\n\r\n\r\n  const loginUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth \r\n        .signInWithEmailAndPassword(email,password)\r\n        .then((auth) =>{\r\n          setIsLoggedIn(true)\r\n            history.push('/todo')\r\n        })\r\n        .catch(error => setError(error.message))\r\n        \r\n  }\r\n\r\n  const registerUser = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n            auth \r\n                .createUserWithEmailAndPassword(email,password)\r\n                .then((auth) =>{\r\n                   setIsLoggedIn(true)\r\n                    history.push('/todo')\r\n                })\r\n                .catch(error => setError(error.message))\r\n  \r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={(e)=>{setEmail(e.target.value)}}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e)=>{setPassword(e.target.value)}}\r\n          />\r\n         \r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={loginUser}\r\n            disable={loading}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          className={classes.submit}\r\n          onClick={registerUser}\r\n          disable={loading}\r\n        >\r\n          Sign up\r\n        </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\Todoapp.js",[],"D:\\websiteproject\\gca-todoapp\\src\\TodoApp\\TodoCard.js",["41","42","43","44","45","46"],"import React ,{useState}from 'react'\r\nimport { Card ,Modal ,Checkbox ,List\r\n   ,ListItem ,ListItemText ,IconButton ,Input ,Button } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {db} from '../firebase'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nfunction TodoCard({todo,id,onUpdate}) {\r\n    //  const[checked,setChecked]=useState(false)\r\n     const [complete,setComplete]=React.useState([])\r\n     const [open,setOpen]= useState(false)\r\n     const[updateText,setUpdateText] =useState('')\r\n     const[updateDate,setUpdateDate] =useState('')\r\n     const[error,setError] =useState('')\r\n\r\n     const onCompletedTodo = () => {\r\n        setComplete([...complete,todo])\r\n     }\r\n\r\n     const deleteTodos = (index) => {\r\n       console.log(index);\r\n       db.collection(\"todos\").doc(todo.id).delete()\r\n     }\r\n\r\n     const updateTodo = () => {\r\n       if(updateText!= \"\" && updateDate != \"\"){ \r\n       db.collection('todos').doc(todo.id).set({\r\n        todo:updateText,\r\n        Date:updateDate,\r\n        timestamp:Date.now()\r\n     \r\n\r\n     },{merge:true})\r\n      setOpen(false)\r\n      setError('')\r\n    }\r\n    else{\r\n      setError(\"fields should not be empty\")\r\n      \r\n    }\r\n     }\r\n\r\n     const divstyle = {\r\n     width:\"60%\",\r\n     height:'300px',\r\n     margin:'15rem',\r\n     backgroundColor:'white',\r\n     border: '2px solid #000',\r\n\r\n    };\r\n\r\n    const input ={\r\n      margin:'2rem',\r\n      width:'90%'\r\n    }\r\n\r\n    const button ={\r\n      marginLeft:'10rem'\r\n    }\r\n    {console.log(todo.todo.Date,\"todos\")}\r\n    \r\n    return (\r\n        <>\r\n        <Modal\r\n        open={open}\r\n        onClose={e =>setOpen(false)}\r\n      >\r\n      \r\n    \r\n<div style={divstyle}>\r\n      {error && <h4>{error}</h4>}\r\n<Input value ={updateText} placeholder={todo.todo.todo}  margin=\"normal\" onChange={e =>setUpdateText(e.target.value)} style={input}/>\r\n<Input value ={updateDate} placeholder={todo.todo.Date}  onChange={e =>setUpdateDate(e.target.value)} type=\"datetime-local\" style={input}/>\r\n<Button variant=\"contained\" color=\"secondary\" onClick={e=>setOpen(false)} style={button}>close</Button>\r\n<Button variant=\"contained\" color=\"secondary\" onClick={updateTodo} style={button}>update</Button>\r\n</div>\r\n\r\n</Modal>\r\n        <Card style={{display:'flex',justifyContent:'space-between',margin:'2rem',}}>\r\n        \r\n        <div>\r\n        <List>\r\n        <h3  style={{justifySelf:'center'}}> posted at:{new Date(todo.todo.timestamp).toTimeString()} </h3>\r\n        {console.log(new Date(todo.todo.timestamp).toTimeString(),\"tms\")}\r\n        <ListItem >\r\n          <ListItemText primary={todo.todo.todo} secondary={todo.todo.Date} />\r\n          </ListItem> \r\n      </List>\r\n      </div>\r\n      <div style={{margin:'1.4rem'}}>\r\n       <IconButton  color='secondary' onClick={()=>deleteTodos(id)}>\r\n          <DeleteIcon />\r\n          </IconButton>\r\n          <IconButton color='primary' onClick={()=>setOpen(true)}>\r\n          <EditIcon />\r\n          </IconButton>\r\n      </div>\r\n     \r\n         \r\n        </Card>\r\n       \r\n     </>   \r\n    )\r\n}\r\n\r\nexport default TodoCard\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":29,"column":12,"nodeType":"53","messageId":"54","endLine":29,"endColumn":18},{"ruleId":"51","severity":1,"message":"56","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":24},{"ruleId":"51","severity":1,"message":"57","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":16},{"ruleId":"51","severity":1,"message":"58","line":57,"column":17,"nodeType":"53","messageId":"54","endLine":57,"endColumn":27},{"ruleId":"51","severity":1,"message":"57","line":2,"column":23,"nodeType":"53","messageId":"54","endLine":2,"endColumn":31},{"ruleId":"51","severity":1,"message":"59","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":16},{"ruleId":"51","severity":1,"message":"60","line":18,"column":12,"nodeType":"53","messageId":"54","endLine":18,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":28,"column":21,"nodeType":"63","messageId":"64","endLine":28,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":28,"column":41,"nodeType":"63","messageId":"64","endLine":28,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":62,"column":5,"nodeType":"67","messageId":"68","endLine":62,"endColumn":42},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'logOut' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'setLoading' is assigned a value but never used.","'Snackbar' is defined but never used.","'onCompletedTodo' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]